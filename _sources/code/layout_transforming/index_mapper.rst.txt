============
index_mapper
============

.. py:function:: make_identity_mapper(dim)

   Creates an identity mapper with dimensions specified by the input.

   :param dim: The dimensions for the identity mapper.
   :type dim: tuple
   :return: The created identity mapper.
   :rtype: IndexMapper

.. py:function:: make_df_numeric(df)

   Converts all non-numeric values in the dataframe to numeric by replacing them with the column mean if it exists, else 0.

   :param df: The dataframe to be converted.
   :type df: pandas.DataFrame
   :return: The converted dataframe.
   :rtype: pandas.DataFrame

.. py:method:: __init__(self, mapper=None)

   Initializes the IndexMapper object with an optional mapper.

   :param mapper: The mapper to initialize the IndexMapper with.
   :type mapper: dict or None

.. py:method:: insert(self, start, end)

   Inserts a mapping from end to start in the cell_mapper.

   :param start: The start of the mapping.
   :type start: tuple
   :param end: The end of the mapping.
   :type end: tuple

.. py:method:: max_dimension(self)

   Returns the maximum dimensions of the cell_mapper.
   :return: The maximum dimensions.
   :rtype: tuple

.. py:method:: get_origins(self, j)

   Returns the origins for a given column index.

   :param j: The column index.
   :type j: int
   :return: The origins.
   :rtype: list

.. py:method:: construct_table(self, df, values=True)

   Constructs a new table based on the cell_mapper and an input dataframe.

   :param df: The input dataframe.
   :type df: pandas.DataFrame
   :param values: If True, the values are filled, else "empty" is filled.
   :type values: bool
   :return: The constructed table.
   :rtype: pandas.DataFrame

.. py:method:: compose(self, other)

   Composes the cell_mapper with another cell_mapper.

   :param other: The other cell_mapper.
   :type other: IndexMapper
   :return: The composed IndexMapper.
   :rtype: IndexMapper

.. py:method:: is_valid(self)

   Checks if the IndexMapper is valid.
   :return: True if valid, False otherwise.
   :rtype: bool